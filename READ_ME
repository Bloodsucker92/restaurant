Для запуска необходимо:

1) Создать базу MySQL с именем 'pizza'
2) Поменять credentials к БД в файле 'beans-dao.xml', который находится в слое dao/resources
3) В том же файле 'beans-dao.xml' изменить свойство  <prop key="hibernate.hbm2ddl.auto">update</prop> на 'create',
чтобы создались таблицы и связи между ними. После первого запуска изменить обратно на 'update'
4) Настроить Tomcat 8.x.x в качестве сервера для запуска приложения. Я использую Tomcat 8.5.11
5) Запустить приложение
6) Накатить срипты для базы, которые находятся в корневой папке в следущей последовательности:
   1. pizza_COURSE_CATEGORY.sql
   2. pizza_COURSE.sql
   3. pizza_USER.sql
7) Задеплоив приложение, залогиниться как 'user' (пароль '123'), либо зарегистрироваться. Далее на главной странице
зайти либо в раздел "Pizza", либо "Drinks" (другие пока не успел сделать) и добавить какое-либо блюдо в корзину.
8) Кликнуть на корзину и зайти в заказы. Там увидишь свой заказ.


Сама задача:

Надо сделать, чтобы сработало удаление блюда из заказа. Страница заказа, которая отображается на view,
находится в папке webapp/WEB-INF/pages/showordersREST.jsp. Форма, которая отвечает за удаление, рисуя кнопку
с крестиком, находится внизу этой страницы с id "deleteButtonForm". Чуть выше этой формы в body есть script с нужной ajax
функцией. Переменные 'header' и 'token' в ней нужны для security. Их не трогай. Эта же функция с обращением к форме
и кнопке есть в отдельном файле web/webapp/assets/js/ajaxDeleteItemFromOrder.js.

На клик форма должна передавать управление на контроллер OrderRestController (web/controller/OrderRestController)
в метод deleteItemFromOrder с аннотацией @DeleteMapping (value = "/orders/{orderId}/courses/{courseId}").

Вот собственно нужно, чтобы этот метод корректно вызывался.